-- MySQL Script generated by MySQL Workbench
-- Tue May 31 23:04:36 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema Ancestree
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Ancestree
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Ancestree` DEFAULT CHARACTER SET utf8 ;
USE `Ancestree` ;

-- -----------------------------------------------------
-- Table `Ancestree`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Ancestree`.`Users` (
  `ID` INT(8) NOT NULL AUTO_INCREMENT,
  `Email` VARCHAR(255) NOT NULL,
  `Password` VARCHAR(32) NOT NULL,
  `NonceToken` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `Ancestree`.`FamilyTreeGraphs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Ancestree`.`FamilyTreeGraphs` (
  `UserID` INT(8) NOT NULL,
  `FamilyTreeGraphID` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`FamilyTreeGraphID`, `UserID`),
  INDEX `fk_FamilyTreeGraphs_User_idx` (`UserID` ASC),
  CONSTRAINT `fk_FamilyTreeGraphs_User`
    FOREIGN KEY (`UserID`)
    REFERENCES `Ancestree`.`Users` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `Ancestree`.`PersonNode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Ancestree`.`PersonNode` (
  `FamilyTreeGraphID` VARCHAR(11) NOT NULL,
  `PersonNodeID` INT(11) NOT NULL,
  `Firstname` VARCHAR(255) NULL DEFAULT NULL,
  `Lastname` VARCHAR(255) NULL DEFAULT NULL,
  `IsMale` TINYINT(1) NOT NULL DEFAULT '1',
  `Birthday` DATE NULL DEFAULT NULL,
  `Deathday` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`FamilyTreeGraphID`, `PersonNodeID`),
  INDEX `fk_PersonNode_FamilyTreeGraphs1_idx` (`FamilyTreeGraphID` ASC),
  CONSTRAINT `fk_PersonNode_FamilyTreeGraphs1`
    FOREIGN KEY (`FamilyTreeGraphID`)
    REFERENCES `Ancestree`.`FamilyTreeGraphs` (`FamilyTreeGraphID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `Ancestree`.`Relationship`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Ancestree`.`Relationship` (
  `FamilyTreeGraphID1` VARCHAR(11) NOT NULL,
  `PersonNodeID1` INT(11) NOT NULL,
  `FamilyTreeGraphID2` VARCHAR(11) NOT NULL,
  `PersonNodeID2` INT(11) NOT NULL,
  `RelationshipType` TINYINT(1) NOT NULL,
  PRIMARY KEY (`FamilyTreeGraphID1`, `PersonNodeID1`, `FamilyTreeGraphID2`, `PersonNodeID2`),
  INDEX `fk_PersonNode_has_PersonNode_PersonNode1_idx` (`FamilyTreeGraphID1` ASC, `PersonNodeID1` ASC),
  INDEX `fk_Relationship_PersonNode1_idx` (`FamilyTreeGraphID2` ASC, `PersonNodeID2` ASC),
  CONSTRAINT `fk_Relationship_PersonNode1`
    FOREIGN KEY (`FamilyTreeGraphID1` , `PersonNodeID1`)
    REFERENCES `Ancestree`.`PersonNode` (`FamilyTreeGraphID` , `PersonNodeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Relationship_PersonNode2`
    FOREIGN KEY (`FamilyTreeGraphID2` , `PersonNodeID2`)
    REFERENCES `Ancestree`.`PersonNode` (`FamilyTreeGraphID` , `PersonNodeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `Ancestree`.`PasswordRecovery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Ancestree`.`PasswordRecovery` (
  `RecoveryRecordID` INT NOT NULL AUTO_INCREMENT,
  `UserID` INT(8) NOT NULL,
  `Token` VARCHAR(32) NOT NULL,
  `CreateTime` DATETIME NOT NULL,
  `ExpiredTime` DATETIME NOT NULL,
  PRIMARY KEY (`RecoveryRecordID`, `UserID`),
  INDEX `fk_PasswordRecovery_User1_idx` (`UserID` ASC),
  CONSTRAINT `fk_PasswordRecovery_User1`
    FOREIGN KEY (`UserID`)
    REFERENCES `Ancestree`.`Users` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Ancestree`;

DELIMITER $$
USE `Ancestree`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `Ancestree`.`User_BEFORE_DELETE`
BEFORE DELETE ON `Ancestree`.`Users`
FOR EACH ROW
BEGIN
	delete from `Ancestree`.`FamilyTreeGraphs` where UserID=old.ID;
END$$

USE `Ancestree`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `Ancestree`.`FamilyTreeGraphs_BEFORE_DELETE`
BEFORE DELETE ON `Ancestree`.`FamilyTreeGraphs`
FOR EACH ROW
BEGIN
	delete from `Ancestree`.`PersonNode` where FamilyTreeGraphID=old.FamilyTreeGraphID;
END$$

USE `Ancestree`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `Ancestree`.`PersonNode_BEFORE_DELETE`
BEFORE DELETE ON `Ancestree`.`PersonNode`
FOR EACH ROW
BEGIN
	delete from `Ancestree`.`Relationship` where FamilyTreeGraphID1=old.FamilyTreeGraphID;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
